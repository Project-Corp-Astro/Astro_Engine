version: '3.8'

services:
  astro-engine:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: astro_engine
    ports:
      - "5000:5000"
    volumes:
      # Mount ephemeris data
      - ./astro_engine/ephe:/app/astro_engine/ephe:ro
      # Mount logs
      - astro_logs:/var/log
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
    env_file:
      - .env.production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'

  redis:
    image: redis:7-alpine
    container_name: astro_redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: astro_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - astro-engine
    restart: unless-stopped

volumes:
  astro_logs:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  default:
    name: astro_network
